<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BatchPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAbsAAAG7ATrs4+IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAD80lEQVR4Xu2bT0gUURzH11Iry7KCVIqdtztLBhseLEMUOgSRl4oIUivMUjJKo7pU0HpKyz8JCXkJ
        gg5CGEFYHcpDmXnokCZEoVERgdUluigewtd8n/uG5/Z2W9fZ2dn1CV/092bn977fj7Mj+8bnopRaLp2Q
        Vl0jfwzReMtHyDOZh2glHVyIvBrplBmNp7xe7xqZl2gkHYxVuubpEI0FrgTo8PBIXDQ4+MqchxCSI/MT
        jaSDsUjXtHZuqNC/lX1va22jE99/xEXj4x+dA8AI38bNtDS30JO1dYsHQPCGx4y0XrvOzC0aAMZ7vpmb
        KC7aRi+cO8+0s7Qs9QEU5uau5AbCqftWt9S8FUo4AEzKDVy+eIk2GXd8UTfaO+inz1+k5q2QowDAjMxk
        PKUAKAAKgAKgACgACoACoAAoAAqANQCMrzTjs325102afBrp0d3kXkRp5AE3cOJYDVsDsFOYk8/PvMg8
        CkImZENGZJ0DwLfRt0nXtH6hYYpL60dmBsDv92cag6M44PUW0A1lZ+jaPR00p7wzpYRMyIaMQRCjyI5V
        nQAGyOYimnF8lLoaf6e0kBFZZyF4AgYAMoRi9b470hOSQdn779LVe2/TpfVfWb2i8imrl1W/ZnVmzTCr
        sw49ZjWyzgIgQwAwiSKz5o3ZMNnk8c0uw/PAuaX1rMaljxrhUecXH2Y1sqI2NAkArEivfW82TDblldSx
        cBm171iN4KhXHexlNX7zqNftvspqZOW5UwLAfKUAKAAKgAKgACgACoACoAAoAArAPAA0/KLZB3rmLDI4
        UfAIr9IMQcUEYPmR5+ZJThe8yjJwxQQg7fRPun5XE/usDeWV1JpNEr0oCi/cFzzCqywDVyiAGfzAP0tH
        qyWnvplNEr0sDi8yj+GErMFzZwBgDEVWxRPpi8MpEoDhkbd0YOClpUJPcY6FAEDW4LljLvYMwCjyt1dJ
        XxxOkQDgEuXHrBJ6inMsBACy4jxkxxOeLUYxhYH8HUeNG8gLtriIppGUXvfBNBAK4GxDI/t3WSuFnuIc
        IgB4kXkUhUzIhozB86aQnT0Y0d2eamNgmjecr0IB2CERQAyaRmbzyRB7OuR2+3U3eWgcnAh58X+VRAAm
        kBFZeW4TgKiCgoJsPHCMJI/Ho/HGoQDsfgvAi8yjKGSSZf1nIFqhaTgAdt8E4UXmMRpJB6NRJAB2/xl0
        HAA75GgAXTe72CVrpdBTnMPRAGCYH7NK6CnO4WgAvb332WYJK4We4hyOBmCHHA2gr+8R2y1ipdBTnMPR
        ABb9PQDv2aqKSkuFnuIcjgZghxwFANtYZdtb46mEb53FhmVuINFK2OZpbF2XGbJTC9s+T11/AY71+owR
        6a00AAAAAElFTkSuQmCC
</value>
  </data>
</root>